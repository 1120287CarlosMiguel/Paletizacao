/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package paletizacao.ui;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.text.FieldPosition;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.util.Locale;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import paletizacao.controller.CalculaPercentagemController;
import paletizacao.model.Artigo;
import paletizacao.model.TipoContentor;
import paletizacao.model.Mercado;
import paletizacao.model.TipoPalete;
import paletizacao.persistance.inmemory.InMemoryRepositoryFactory;

/**
 *
 * @author Mac
 */
public class CalculaPercentagemUI extends javax.swing.JFrame {
    
    /**Controller que perminte a interacao com o modelo de dominio*/
    private CalculaPercentagemController controller;
    
    private boolean ignoreArtigo = true;
    
    private boolean ignoreContentor = true;
    
    private boolean ignorePalete = true;
    
    private boolean isErase = false;
    
    /**
     * Creates new form CalculaPercentagemUI
     */
    public CalculaPercentagemUI() {
        initComponents();
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        controller = new CalculaPercentagemController(volContPalTF, volOcupadoTF);
        preencherMercado();
        preencherPalete();
        preencherContentor();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox2 = new javax.swing.JComboBox();
        jSeparator7 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        mercadoCB = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaArtigos = new javax.swing.JList();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        contentoresCB = new javax.swing.JComboBox();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        tipoPaleteCB = new javax.swing.JComboBox();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        volCTextF = new javax.swing.JTextField();
        eraseButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        volOcupadoTF = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        emptyButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        percentagemOcupacaoTF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        volContPalTF = new javax.swing.JTextField();

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jLabel1.setText("Mercado:");

        mercadoCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        mercadoCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mercadoCBActionPerformed(evt);
            }
        });

        jLabel2.setText("Artigos");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        listaArtigos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listaArtigos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaArtigosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaArtigos);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        tabelaProdutos.getTableHeader().setReorderingAllowed(false);

        Action action = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e) {
                TableCellListener c1 = (TableCellListener) e.getSource();
                alteraEstatisticas();
            }
        };

        TableCellListener tc1 = new TableCellListener(tabelaProdutos,action);
        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Kilogramas", "Caixas Completas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaProdutos.setToolTipText("");
        tabelaProdutos.setShowGrid(true);
        tabelaProdutos.setGridColor (Color.black);
        jScrollPane2.setViewportView(tabelaProdutos);
        if (tabelaProdutos.getColumnModel().getColumnCount() > 0) {
            tabelaProdutos.getColumnModel().getColumn(1).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(1).setPreferredWidth(1);
            tabelaProdutos.getColumnModel().getColumn(2).setPreferredWidth(1);
        }

        jLabel3.setText("Artigos:");

        jLabel4.setText("Contentor:");

        contentoresCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        contentoresCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contentoresCBActionPerformed(evt);
            }
        });

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel5.setText("Tipo Palete:");

        tipoPaleteCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tipoPaleteCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoPaleteCBActionPerformed(evt);
            }
        });

        jSeparator8.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel6.setText("Vol. Contentor");
        jLabel6.setToolTipText("Volume do contentor em m3");

        volCTextF.setEditable(false);
        volCTextF.setToolTipText("Volume do contentor em m3");

        eraseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/erase.png"))); // NOI18N
        eraseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eraseButtonMouseClicked(evt);
            }
        });

        jLabel7.setText("Vol. Ocupado");
        jLabel7.setToolTipText("Volume ocupada pela encomenda em m3");

        volOcupadoTF.setEditable(false);
        volOcupadoTF.setText("0.0000");
        volOcupadoTF.setToolTipText("Volume ocupada pela encomenda em m3");

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add.png"))); // NOI18N
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonMouseClicked(evt);
            }
        });

        emptyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/empty.png"))); // NOI18N
        emptyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emptyButtonMouseClicked(evt);
            }
        });

        jLabel8.setText("% Ocupação");
        jLabel8.setToolTipText("Percentagem de ocupacao da encomenda incluindo as paletes");

        percentagemOcupacaoTF.setEditable(false);
        percentagemOcupacaoTF.setText("0.00 %");
        percentagemOcupacaoTF.setToolTipText("Percentagem de ocupacao da encomenda incluindo as paletes");

        jLabel9.setText("Vol. Cont. com Palete");
        jLabel9.setToolTipText("volume do contentor sem a altura da palete");

        volContPalTF.setEditable(false);
        volContPalTF.setToolTipText("volume do contentor sem a altura da palete");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(contentoresCB, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tipoPaleteCB, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(128, 128, 128))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jScrollPane1)
                                    .addComponent(mercadoCB, 0, 273, Short.MAX_VALUE)
                                    .addComponent(jSeparator1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(eraseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(emptyButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                            .addComponent(jSeparator5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(volCTextF, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(volOcupadoTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(percentagemOcupacaoTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(volContPalTF)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator3)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(contentoresCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tipoPaleteCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jSeparator8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(addButton)
                                                        .addComponent(emptyButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(eraseButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(mercadoCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane1)))
                                        .addContainerGap())))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator4)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(volCTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(volContPalTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(volOcupadoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(percentagemOcupacaoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator6)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metodo que preenche a lista de artigos consoante o mercado escolhido.
     * A lista de artigos que aparace np inicio e a do 1 mercado.
     * @param evt 
     */
    private void mercadoCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mercadoCBActionPerformed
        if(!ignoreArtigo) {    
           preencherArtigos();
        }
    }//GEN-LAST:event_mercadoCBActionPerformed

    /**
     * Metodo que verifica se foi clicado 2 vezes num dos items da lista de artigos para adicionar para a tabela.
     * @param evt evento
     */
    private void listaArtigosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaArtigosMouseClicked
        if(evt.getClickCount() == 2) {
            addArtigo();
        }
    }//GEN-LAST:event_listaArtigosMouseClicked

    /**
     * Metodo que deteta a escolha de um contentor e altera a area total
     * @param evt 
     */
    private void contentoresCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contentoresCBActionPerformed
        if(!ignoreContentor) {
            String area = String.format("%.2f",((TipoContentor)contentoresCB.getSelectedItem()).getVolume());
            volCTextF.setText(area);
        
            area = String.format("%.2f",((TipoContentor)contentoresCB.getSelectedItem()).getVolume(getAlturaPaleteSelecionada()));
            volContPalTF.setText(area);
            
            jLabel4.setToolTipText(((TipoContentor)contentoresCB.getSelectedItem()).imprimeMedidas());
            contentoresCB.setToolTipText(((TipoContentor)contentoresCB.getSelectedItem()).imprimeMedidas());  
            
            isErase = true;
            alteraEstatisticas();
            isErase = false;
        }
    }//GEN-LAST:event_contentoresCBActionPerformed

    /**
     * Metodo que dispoleta evento de apagar uma das linhas.
     * @param evt 
     */
    private void eraseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eraseButtonMouseClicked
        int[] rows = tabelaProdutos.getSelectedRows();
        
        DefaultTableModel mode = (DefaultTableModel) tabelaProdutos.getModel();
        
        if(rows.length == 0) {
            JOptionPane.showMessageDialog(null,"Nenhum artigo da tabela selecionada.","ERRO",JOptionPane.ERROR_MESSAGE);
        } else {
            for(int i=rows.length-1;i>=0;i--) {
               mode.removeRow(rows[i]);
            }
            
            controller.removeArtigos(rows);
        }
        
        isErase = true;
        alteraEstatisticas();
        isErase = false;
    }//GEN-LAST:event_eraseButtonMouseClicked

    
    /**
     * Metodo que apaga todos as linha da tabela.
     * @param evt 
     */
    private void emptyButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emptyButtonMouseClicked
        DefaultTableModel mode = (DefaultTableModel)tabelaProdutos.getModel();
        
        mode.setNumRows(0);
        controller.removeArtigos();
        
        isErase = true;
        alteraEstatisticas();
        isErase = false;
    }//GEN-LAST:event_emptyButtonMouseClicked

    /**
     * Quando carrega na JFrame desselecionar a lista e o artigo./
     * @param evt 
     */
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        tabelaProdutos.getSelectionModel().clearSelection();
        listaArtigos.clearSelection();
        
        isErase = true;
        alteraEstatisticas();
        isErase = false;
    }//GEN-LAST:event_formMousePressed

    /**
     * Metodo que verifica se addButton foi clicado para adicionar o artigo selecionado
     * @param evt 
     */
    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
        addArtigo();
    }//GEN-LAST:event_addButtonMouseClicked

    private void tipoPaleteCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoPaleteCBActionPerformed
        if(!ignorePalete) {
            String area = String.format("%.2f",((TipoContentor)contentoresCB.getSelectedItem()).getVolume(getAlturaPaleteSelecionada()));
            volContPalTF.setText(area);
            
            isErase = true;
            alteraEstatisticas();
            isErase = false;
        }
    }//GEN-LAST:event_tipoPaleteCBActionPerformed

    /**
     * Metodo que adiciona o artigo a tabela e ao mapa de artigos do controller.
     */
    private void addArtigo() {
        DefaultTableModel mode = (DefaultTableModel) tabelaProdutos.getModel();

        if(listaArtigos.getSelectedValue() != null) {
            Artigo art = (Artigo) listaArtigos.getSelectedValue();
            
            if(controller.addArtigo(art, new Double(0))) {
                mode.addRow(new Object[2]);
                tabelaProdutos.setValueAt(art, mode.getRowCount()-1, 0);
                tabelaProdutos.setValueAt(0, mode.getRowCount()-1, 2);
            } else {
               JOptionPane.showMessageDialog(null, "Artigo ja existente na tabela", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
            
        } else {
            JOptionPane.showMessageDialog(null,"Nenhum artigo da lista selecionado.","ERRO",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * Metodo que preenche a combo box com os mercados existentes.
     */
    private void preencherMercado() {
       mercadoCB.removeAllItems();
       
       for(Mercado m : controller.getListaMercados()) {
           mercadoCB.addItem(m);
       }
       
       ignoreArtigo = false;
       mercadoCB.setSelectedIndex(0);
   }

    /**
     * Metodo que preenche a lista com os artigos consoante o mercado escolhido.
     */
    private void preencherArtigos() {
        listaArtigos.removeAll();
        
        Mercado temp = (Mercado)mercadoCB.getSelectedItem();
        
        DefaultListModel listModel = new DefaultListModel();
        for(Artigo a : temp.getArtigos()) {
            listModel.addElement(a);
        }
        
        listaArtigos.setModel(listModel);
   }
    
    /**
    Metodo que preenche a combo box com os contentores existentes.
     */
    private void preencherContentor() {
        contentoresCB.removeAllItems();
        
        for(TipoContentor c : controller.getListaContentor()) {
            contentoresCB.addItem(c);
        }
        
        contentoresCB.setSelectedIndex(0);
        jLabel4.setToolTipText(((TipoContentor)contentoresCB.getSelectedItem()).imprimeMedidas());
        contentoresCB.setToolTipText(((TipoContentor)contentoresCB.getSelectedItem()).imprimeMedidas());
        
        ignoreContentor = false;
        
        String area = String.format("%.2f",((TipoContentor)contentoresCB.getSelectedItem()).getVolume());
        volCTextF.setText(area);
        area = String.format("%.2f",((TipoContentor)contentoresCB.getSelectedItem()).getVolume(getAlturaPaleteSelecionada()));
        volContPalTF.setText(area);
        
    }
    
    /**
    Metodo que preenche a combo box com as paletes existentes.
     */
    private void preencherPalete() {
        tipoPaleteCB.removeAllItems();
        
        for(TipoPalete pal : controller.getListaPalete()) {
            tipoPaleteCB.addItem(pal);
        }
        
        tipoPaleteCB.setSelectedIndex(0);
        ignorePalete = false;
    }
   
    /**
     * Metodo que altera o text field com o volume, adiciona o numero de caixas completas na celula e calcula percentagem de ocupacao
     */
    private void alteraEstatisticas() {
        int row = 0;
        Artigo alter = null;
        double kgTemp = 0;
        
        if(!isErase) {
            row = tabelaProdutos.getSelectedRow();
            alter = (Artigo)tabelaProdutos.getValueAt(row, 0);
        
            kgTemp = controller.getQuantidadeArtig(alter);
        }    
           
        double volume = calculaVolumeArtigos();        
         
        try {
            if(controller.getPercentagemOcupacao() < 0) {
                        JOptionPane.showMessageDialog(null, "Ocupação de contentor ultrapassada", "ERRO", JOptionPane.ERROR_MESSAGE);
                        
                        tabelaProdutos.setValueAt(kgTemp, row, 1);
                        tabelaProdutos.setValueAt(alter.kilogramaParaCaixas(kgTemp), row, 2);
                        
                        controller.alteraQuantidadeArtigo(alter,kgTemp);
                        
                        volume = calculaVolumeArtigos();
            } 
        } catch (ParseException e) {
            
        }
        
        volOcupadoTF.setText(String.format("%.4f", volume));
        
        double percentagem = controller.getPercetagemOcupacao();
        percentagemOcupacaoTF.setText(String.format("%.2f", percentagem)+" %");
    }
    
    /**
     * Método que percorre a lista de artigos e calcula o volume da encomenda
     * @return double, volume dos artigos
     */
    private double calculaVolumeArtigos() {
        double volume = 0.0;
        
        DefaultTableModel mode = (DefaultTableModel) tabelaProdutos.getModel();
        
        for(int i=0;i<mode.getRowCount();i++) {
            
            if(tabelaProdutos.getValueAt(i,1) != null && ((Double)tabelaProdutos.getValueAt(i,1)).doubleValue() >= 0) {
                double kg = Double.parseDouble(tabelaProdutos.getValueAt(i,1).toString());
                double caixas = ((Artigo)tabelaProdutos.getValueAt(i, 0)).kilogramaParaCaixas(kg);
                tabelaProdutos.setValueAt(caixas, i, 2);
                controller.alteraQuantidadeArtigo((Artigo)tabelaProdutos.getValueAt(i, 0), kg);
                
            } else if(tabelaProdutos.getValueAt(i,1) != null && ((Double)tabelaProdutos.getValueAt(i,1)).doubleValue() < 0){
                  JOptionPane.showMessageDialog(null, "Quantidade de artigo inválida", "ERRO", JOptionPane.ERROR_MESSAGE);
                  tabelaProdutos.setValueAt(controller.getQuantidadeArtig((Artigo)tabelaProdutos.getValueAt(i, 0)), tabelaProdutos.getSelectedRow(), 1); 
                  
            }
        }
        
        volume = controller.getVolumeEncomenda();
        
        return volume;
    }
   
    /**
     * Metodo que retorna a altura a partir da palete escolhida.
     * @return double, altura da palete em m
     */
    public double getAlturaPaleteSelecionada() {
        TipoPalete pal = (TipoPalete)tipoPaleteCB.getSelectedItem();
        return pal.getAltura();
    }
   
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JComboBox contentoresCB;
    private javax.swing.JButton emptyButton;
    private javax.swing.JButton eraseButton;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JList listaArtigos;
    private javax.swing.JComboBox mercadoCB;
    private javax.swing.JTextField percentagemOcupacaoTF;
    private javax.swing.JTable tabelaProdutos;
    private javax.swing.JComboBox tipoPaleteCB;
    private javax.swing.JTextField volCTextF;
    private javax.swing.JTextField volContPalTF;
    private javax.swing.JTextField volOcupadoTF;
    // End of variables declaration//GEN-END:variables
}
